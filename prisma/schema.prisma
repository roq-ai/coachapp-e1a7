generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model attendance {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date       DateTime @db.Date
  attended   Boolean
  swimmer_id String   @db.Uuid
  coach_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  swimmer    swimmer  @relation(fields: [swimmer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model club {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team        team[]
}

model event {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @db.VarChar(255)
  swim_meet_id String    @db.Uuid
  swimmer_id   String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  swim_meet    swim_meet @relation(fields: [swim_meet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  swimmer      swimmer   @relation(fields: [swimmer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model swim_meet {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String   @db.VarChar(255)
  date            DateTime @db.Date
  team_manager_id String   @db.Uuid
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  event           event[]
  user            user     @relation(fields: [team_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model swimmer {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name    String          @db.VarChar(255)
  last_name     String          @db.VarChar(255)
  team_id       String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  attendance    attendance[]
  event         event[]
  team          team            @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  training_plan training_plan[]
}

model team {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String    @db.VarChar(255)
  club_id       String    @db.Uuid
  head_coach_id String?   @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  swimmer       swimmer[]
  club          club      @relation(fields: [club_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?     @relation(fields: [head_coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model training_plan {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  coach_id    String   @db.Uuid
  swimmer_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  swimmer     swimmer  @relation(fields: [swimmer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String          @unique @db.VarChar(255)
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  roq_user_id   String          @db.VarChar(255)
  tenant_id     String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  attendance    attendance[]
  club          club[]
  swim_meet     swim_meet[]
  team          team[]
  training_plan training_plan[]
}
